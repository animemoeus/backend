version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_django_media: {}
  prometheus_data: {}
  grafana_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: backend_production_django
    volumes:
      - production_django_media:/app/backend/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: backend_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: backend_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: backend_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: backend_production_flower
    command: /start-flower

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: backend_local_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
    ports:
      - 80:80

  prometheus:
    image: prom/prometheus
    restart: 'no'
    volumes:
      - prometheus_data:/prometheus
      - ./compose/production/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./compose/production/prometheus/web.yml:/etc/prometheus/web.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.config.file=/etc/prometheus/web.yml

  grafana:
    image: grafana/grafana
    restart: 'no'
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
