version: "3"

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_django_media: {}
  etc_wireguard:

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: backend_production_django
    volumes:
      - production_django_media:/app/backend/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: backend_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    image: backend_production_celeryworker
    command: /start-celeryworker
    deploy:
      replicas: 2

  celerybeat:
    <<: *django
    image: backend_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: backend_production_flower
    command: /start-flower

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: backend_local_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
    ports:
      - 80:80

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  wireguard:
    environment:
      - WG_HOST=${WIREGUARD_HOST}
      - PASSWORD=${WIREGUARD_PASSWORD}
      - WG_DEFAULT_ADDRESS=10.7.0.x
      - UI_TRAFFIC_STATS=true
      - UI_CHART_TYPE=2
    image: ghcr.io/wg-easy/wg-easy
    container_name: wireguard
    volumes:
      - etc_wireguard:/etc/wireguard
    ports:
      - "51820:51820/udp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
